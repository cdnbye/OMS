{"version":3,"sources":["webpack:///./src/views/p2pConfig/user/uploadRule.vue","webpack:///src/views/p2pConfig/user/uploadRule.vue","webpack:///./src/views/p2pConfig/user/uploadRule.vue?b82f","webpack:///./src/views/p2pConfig/user/uploadRule.vue?bab9","webpack:///./src/api/user/p2pConfig.js"],"names":["render","_vm","this","_c","_self","style","device","staticStyle","attrs","$t","directives","name","rawName","value","loading","expression","tableData","formatterStatus","scopedSlots","_u","key","fn","scope","row","blocked","_v","_s","wifi_only","on","valueChange","staticClass","tableParam","pageSize","page","handleSizeChange","handleCurrentChange","staticRenderFns","data","applyAll","id","domain","computed","mapGetters","mounted","methods","fetchTableData","fetchUserDomain","isvalid","catch","handleP2PConfig","uid","p2pConfigWifiOnly","then","title","message","type","component","p2pConfig","user_id","domain_id","request","url","method","p2pConfigRatio","updateSignalAddr","updateStuns"],"mappings":"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","file":"js/chunk-32f9ed28.7efbd253.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{style:(_vm.device === 'mobile' ? '' : 'padding: 30px 120px')},[_c('el-alert',{staticStyle:{\"margin-bottom\":\"20px\"},attrs:{\"title\":_vm.$t('p2pConfig.uploadRule.desc')}}),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],attrs:{\"border\":\"\",\"data\":_vm.tableData}},[_c('el-table-column',{attrs:{\"align\":\"center\",\"prop\":\"domain\",\"label\":_vm.$t('p2pConfig.name')}}),_c('el-table-column',{attrs:{\"align\":\"center\",\"formatter\":_vm.formatterStatus,\"label\":_vm.$t('p2pConfig.uploadRule.status')},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(!scope.row.blocked)?_c('el-switch',{attrs:{\"value\":scope.row.wifi_only,\"active-color\":\"#13ce66\",\"inactive-color\":\"#ff4949\",\"active-text\":_vm.$t('p2pConfig.uploadRule.on'),\"inactive-text\":_vm.$t('p2pConfig.uploadRule.off')},on:{\"change\":value => _vm.valueChange(scope.row, value)}}):_c('span',{style:('color: red')},[_vm._v(\"\\n                    \"+_vm._s(_vm.formatterStatus(scope.row))+\"\\n                 \")])]}}])})],1),_c('div',{staticClass:\"pagination-container\"},[_c('el-pagination',{attrs:{\"layout\":\"sizes, prev, pager, next\",\"page-sizes\":[10, 20, 50, 100],\"page-size\":_vm.tableParam.pageSize,\"current-page\":_vm.tableParam.page},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div :style=\"device === 'mobile' ? '' : 'padding: 30px 120px'\">\n        <el-alert :title=\"$t('p2pConfig.uploadRule.desc')\" style=\"margin-bottom: 20px\" />\n        <el-table border :data=\"tableData\" v-loading=\"loading\">\n            <el-table-column align=\"center\" prop=\"domain\" :label=\"$t('p2pConfig.name')\"></el-table-column>\n            <el-table-column align=\"center\" :formatter=\"formatterStatus\" :label=\"$t('p2pConfig.uploadRule.status')\">\n                <template  slot-scope=\"scope\">\n                    <el-switch v-if=\"!scope.row.blocked\"\n                               :value=\"scope.row.wifi_only\"\n                               active-color=\"#13ce66\"\n                               inactive-color=\"#ff4949\"\n                               :active-text=\"$t('p2pConfig.uploadRule.on')\"\n                               :inactive-text=\"$t('p2pConfig.uploadRule.off')\"\n                               @change=\"value => valueChange(scope.row, value)\"> </el-switch>\n                    <span v-else :style=\"'color: red'\">\n                        {{ formatterStatus(scope.row) }}\n                     </span>\n                </template>\n            </el-table-column>\n        </el-table>\n\n        <div class=\"pagination-container\">\n            <el-pagination\n                    layout=\"sizes, prev, pager, next\"\n                    :page-sizes=\"[10, 20, 50, 100]\"\n                    :page-size=\"tableParam.pageSize\"\n                    :current-page=\"tableParam.page\"\n                    @size-change=\"handleSizeChange\"\n                    @current-change=\"handleCurrentChange\">\n            </el-pagination>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import { fetchUserDomain } from '@/api/userDomain'\n    import { p2pConfigWifiOnly } from '@/api/user/p2pConfig'\n    import { mapGetters } from 'vuex'\n\n    const APPLY_TO_ALL = '*Apply To All*'\n\n    export default {\n        name: 'uploadRule',\n        data() {\n            return {\n                loading: false,\n                tableData: [],\n                tableParam: {\n                    page: 1,\n                    pageSize: 10\n                },\n                applyAll: {\n                  id: 0,\n                  domain: APPLY_TO_ALL,\n                  blocked: false,\n                  wifi_only: false,\n                }\n            }\n        },\n        computed: {\n            ...mapGetters([\n                'device'\n            ])\n        },\n        mounted() {\n            this.fetchTableData()\n        },\n        methods: {\n            formatterStatus(row) {\n                if(row.blocked) {\n                    return this.$t('common.illegal')\n                }\n                // if(row.reviewing) {\n                //     return this.$t('common.reviewing')\n                // }\n                return \"\"\n            },\n            fetchTableData(page=this.tableParam.page, pageSize=this.tableParam.pageSize) {\n                this.loading = true\n                fetchUserDomain(page, pageSize, {isvalid: true}).then(res => {\n                    if(res.data) {\n                        this.tableData = res.data\n                        if (this.tableData.length > 1) {\n                          this.applyAll.uid = this.tableData[0].uid\n                          this.tableData.unshift(this.applyAll)\n                        }\n                    }\n                    this.loading = false\n                }).catch(() => {\n                    this.loading = false\n                })\n            },\n            handleP2PConfig(uid, id, data) {\n                this.loading = true\n                p2pConfigWifiOnly(uid, id, data)\n                    .then(res => {\n                        if(res.data.succeed) {\n                            this.$notify({\n                                title: this.$t('common.success'),\n                                message: this.$t('p2pConfig.configSuccess'),\n                                type: 'success'\n                            });\n                            if (id === 0) {\n                              this.applyAll.wifi_only = !this.applyAll.wifi_only\n                            }\n                            this.fetchTableData()\n                        } else {\n                            this.$notify.error({\n                                title: this.$t('common.error'),\n                                message: this.$t('p2pConfig.configFail'),\n                            });\n                        }\n                        this.loading = false\n                    })\n                    .catch(() => {\n                        this.loading = false\n                    })\n            },\n            valueChange(domain, value) {\n                const data = { wifi_only: value }\n                this.handleP2PConfig(domain.uid, domain.id, data)\n            },\n            handleSizeChange(pageSize) {\n                this.tableParam.pageSize = pageSize\n                this.fetchTableData()\n            },\n            handleCurrentChange(page) {\n                this.tableParam.page = page\n                this.fetchTableData()\n            },\n        },\n    }\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./uploadRule.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./uploadRule.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./uploadRule.vue?vue&type=template&id=5fa8710c&\"\nimport script from \"./uploadRule.vue?vue&type=script&lang=js&\"\nexport * from \"./uploadRule.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import request from '@/utils/request'\n\n// 用户配置网站p2p开关\nexport function p2pConfig(user_id, domain_id, data) {\n  return request({\n    url: `user/user_id/${user_id}/domain/domain_id/${domain_id}/control`,\n    method: 'post',\n    data\n  })\n}\n\n// 配置wifi only\nexport function p2pConfigWifiOnly(user_id, domain_id, data) {\n    return request({\n        url: `user/user_id/${user_id}/domain/domain_id/${domain_id}/control/wifi_only`,\n        method: 'post',\n        data\n    })\n}\n\n// 配置p2p激活比率\nexport function p2pConfigRatio(user_id, domain_id, data) {\n    return request({\n        url: `user/user_id/${user_id}/domain/domain_id/${domain_id}/control/ratio`,\n        method: 'post',\n        data\n    })\n}\n\n// 配置信令地址\nexport function updateSignalAddr(user_id, domain_id, data) {\n    return request({\n        url: `user/user_id/${user_id}/domain/domain_id/${domain_id}/control/signal`,\n        method: 'post',\n        data\n    })\n}\n\n// 新增stun\nexport function updateStuns(user_id, domain_id, data) {\n    return request({\n        url: `user/user_id/${user_id}/domain/domain_id/${domain_id}/control/stun`,\n        method: 'post',\n        data\n    })\n}\n\n"],"sourceRoot":""}